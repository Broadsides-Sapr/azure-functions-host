variables:
  buildNumber: $[ counter('constant', 13000) ]
  isReleaseBranch: $[contains(variables['Build.SourceBranch'], 'release/')]
  ${{ if contains(variables['Build.SourceBranch'], 'release/inproc6/') }}:
    minorVersionPrefix: "6"
  ${{ elseif contains(variables['Build.SourceBranch'], 'release/inproc8/') }}:
    minorVersionPrefix: "8"
  ${{ else }}:
    minorVersionPrefix: ""
  DOTNET_NOLOGO: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

pr:
  branches:
    include:
    - dev
    - in-proc
    - release/4.*
    - release/inproc6/4.*
    - release/inproc8/4.*

trigger:
  branches:
    include:
    - dev
    - in-proc
    - release/4.*
    - release/inproc6/4.*
    - release/inproc8/4.*

jobs:
- job: InitializePipeline
  pool:
    name: '1ES-Hosted-AzFunc'
    demands:
      - ImageOverride -equals MMS2019TLS
  steps:
  - task: UseDotNet@2 # The pinned SDK we use to build
    displayName: 'Install .NET SDK from global.json'
    inputs:
      packageType: sdk
      useGlobalJson: true
  - task: PowerShell@2
    displayName: 'Initialize'
    name: Initialize
    inputs:
      filePath: '$(Build.Repository.LocalPath)\build\initialize-pipeline.ps1'
      arguments: -minorVersionPrefix "$(minorVersionPrefix)"
      showWarnings: true
      pwsh: true

- job: RunUnitTests
  pool:
    name: '1ES-Hosted-AzFunc'
    demands:
      - ImageOverride -equals MMS2019TLS
  steps:
  - template: build/install-dotnet.yml
  - task: DotNetCoreCLI@2
    displayName: 'Unit Tests'
    inputs:
      command: 'test'
      testRunTitle: 'Unit Tests'
      arguments: '-v n --filter FullyQualifiedName~FunctionDescriptorProviderTests'
      projects: |
        **\WebJobs.Script.Tests.csproj
